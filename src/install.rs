use crate::error::Error;
use std::fs::File;
use std::io::Write;
use std::process::Command;
use tempdir::TempDir;

static INSTALL_SCRIPT: &'static str = r#"
#!/usr/bin/env bash

set -e

# Setup variables

FIREWALL_PLIST_PATH="/Library/LaunchDaemons/com.zas.firewall.plist"

# Install DNS resolver

echo "Installing DNS resolver"
sudo mkdir -p /etc/resolver/
cat <<EOF | sudo tee /etc/resolver/dev 1>/dev/null
# Generated by Zas
nameserver 127.0.0.1
port 12043
EOF

# Install port forwarding

echo "Installing port forward"
cat <<EOF | sudo tee "${FIREWALL_PLIST_PATH}" 1>/dev/null
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>Label</key>
        <string>com.zas.firewall</string>
        <key>ProgramArguments</key>
        <array>
                <string>/bin/sh</string>
                <string>-c</string>
                <string>
                  sysctl -w net.inet.ip.forwarding=1;
                  echo "rdr pass proto tcp from any to any port {80,12044} -> 127.0.0.1 port 12044" | pfctl -a "com.apple/250.ZasFirewall" -Ef -
                </string>
        </array>
        <key>RunAtLoad</key>
        <true/>
        <key>UserName</key>
        <string>root</string>
</dict>
</plist>
EOF

sudo launchctl bootstrap system "${FIREWALL_PLIST_PATH}" 2>/dev/null
sudo launchctl enable system/com.zas.firewall 2>/dev/null
sudo launchctl kickstart -k system/com.zas.firewall 2>/dev/null
"#;

pub fn run_install() -> Result<(), Error> {
    let tmp_dir = TempDir::new("zasd")?;

    let file_path = tmp_dir.path().join("install.sh");
    {
        let mut tmp_file = File::create(&file_path)?;
        writeln!(tmp_file, "{}", INSTALL_SCRIPT)?;
    }

    Command::new("bash")
        .arg(file_path.to_str().unwrap())
        .status()
        .expect("problem running install script");

    tmp_dir.close()?;

    Ok(())
}
