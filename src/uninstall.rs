use std::fs::File;
use std::io::Write;
use std::process::Command;
use tempdir::TempDir;

use crate::error::Error;

static UNINSTALL_SCRIPT: &'static str = r#"
#!/usr/bin/env bash

set -e

# Setup variables

FIREWALL_PLIST_PATH="/Library/LaunchDaemons/com.zas.firewall.plist"

# Uninstall the DNS resolver

echo "Uninstalling DNS resolver"
grep -Rl 'Generated by Zas' /etc/resolver/ | sudo xargs rm

# Uninstall port forwarding

echo "Uninstalling port forward"
sudo launchctl unload "$FIREWALL_PLIST_PATH" 2>/dev/null || true
sudo rm -f "$FIREWALL_PLIST_PATH"
"#;

pub fn run_uninstall() -> Result<(), Error> {
    let tmp_dir = TempDir::new("zasd")?;

    let file_path = tmp_dir.path().join("uninstall.sh");
    {
        let mut tmp_file = File::create(&file_path)?;
        writeln!(tmp_file, "{}", UNINSTALL_SCRIPT)?;
    }

    Command::new("bash")
        .arg(file_path.to_str().unwrap())
        .status()
        .expect("problem running uninstall script");

    tmp_dir.close()?;

    Ok(())
}
